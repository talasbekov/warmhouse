services:
  postgres-smart-home:
    image: postgres:16-alpine
    container_name: smarthome-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: smarthome
    volumes:
      - ./smart_home/init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - smarthome-network

  postgres-device-service:
    image: postgres:16-alpine
    container_name: device-service-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: devicedb
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - smarthome-network

  postgres-telemetry-service:
    image: timescale/timescaledb:latest-pg16
    container_name: telemetry-service-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: telemetrydb
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - smarthome-network

  temperature-api:
    build:
      context: heating-service
      dockerfile: Dockerfile
    container_name: temperature-api
    ports:
      - "8081:8081"
    restart: unless-stopped
    networks:
      - smarthome-network

  telemetry-service:
    build:
      context: telemetry-service
      dockerfile: Dockerfile
    container_name: telemetry-service
    depends_on:
      postgres-telemetry-service:
        condition: service_healthy
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@postgres-telemetry-service:5432/telemetrydb"
    ports:
      - "8082:8082"
    restart: unless-stopped
    networks:
      - smarthome-network

  device-service:
    build:
      context: device-service
      dockerfile: Dockerfile
    container_name: device-service
    depends_on:
      postgres-device-service:
        condition: service_healthy
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@postgres-device-service:5432/devicedb"
    ports:
      - "8083:8083"
    restart: unless-stopped
    networks:
      - smarthome-network

  app:
    build:
      context: smart-home
      dockerfile: Dockerfile
    container_name: smarthome-app
    depends_on:
      postgres-smart-home:
        condition: service_healthy
      temperature-api:
        condition: service_started
    environment:
      DATABASE_URL: "postgres://postgres:postgres@postgres-smart-home:5432/smarthome?sslmode=disable"
      TEMPERATURE_API_URL: "http://temperature-api:8081"
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - smarthome-network

networks:
  smarthome-network:
    driver: bridge